@attribute [Authorize]
@page "/admin/categories"
@inject IMyBlogApi api
@using MyBlog.Data.Models
@using MyBlog.Data.Interfaces

<h3>Categories</h3>

<EditForm OnValidSubmit="Save" Model="Item">
    <DataAnnotationsValidator />
    <CustomCssClassProvider ProviderType="BootstrapFieldCssClassProvider" />
    <InputText @bind-Value="@Item.Name" />
    <ValidationMessage For="@(()=>Item.Name)" />
    <button class="btn btn-success" type="submit">Save</button>
</EditForm>

<ItemList Items="Items" DeleteEvent="@Delete" SelectEvent="@Select" ItemType="Category">
    <ItemTemplate>
    @{ 
        var item = context as Category;
        if (item != null)
        {
            @item.Name;
        }
    }
    </ItemTemplate>
</ItemList>

@code {
    private List<Category> Items { get; set; } = new List<Category>();
    public Category Item { get; set; } = new Category();

    protected async override Task OnInitializedAsync()
    {
        Items = await api.GetCategoriesAsync();
        await base.OnInitializedAsync();
    }

    private async Task Delete(Category category)
    {
        try
        {
            await api.DeleteCategoryAsync(category);
            Items.Remove(category);
        }
        catch { }
    }

    private async Task Save()
    {
        try
        {
            if (Item.Id == 0)
            {
                Items.Add(Item);
            }
            await api.SaveCategoryAsync(Item);
            Item = new Category();
        }
        catch { }
    }

    private Task Select(Category category)
    {
        try
        {
            Item = category;
        }
        catch { }
        return Task.CompletedTask;
    }
}
}
