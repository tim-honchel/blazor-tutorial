@page "/"
@using MyBlog.Data.Interfaces
@using MyBlog.Data.Models
@inject IMyBlogApi api

<button @onclick="AddSomePosts">Add some fake posts</button>
<br />
<br />
<ul>
    <Virtualize ItemsProvider="LoadPosts" Context="p">
        <li><a href="/Post/@p.Id">@p.Title</a></li>
    </Virtualize>
</ul>

@code
{
    protected async Task AddSomePosts()
    {

        var category = new Category() { Name = "New Category" };
        try
        {
            category = await api.SaveCategoryAsync(category); // TODO: causes runtime error
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
        }

        for (int i = 0; i < 10; i++)
        {
            var post = new BlogPost() 
                {
                    PublishDate = DateTime.Now,
                    Title = $"Blog post {i}",
                    Text = "Text",
                    Category = category
                };
            await api.SaveBlogPostAsync(post); // TODO: causes runtime error
        }
    }
    public int totalBlogPosts { get; set; }
    private async ValueTask<ItemsProviderResult<BlogPost>>LoadPosts(ItemsProviderRequest request)
    {
        if (totalBlogPosts == 0)
        {
            totalBlogPosts = await api.GetBlogPostCountAsync();
        }
        var numBlogPosts = Math.Min(request.Count, totalBlogPosts - request.StartIndex);
        var blogPosts = await api.GetBlogPostsAsync(numBlogPosts, request.StartIndex);
        return new ItemsProviderResult<BlogPost>(blogPosts, totalBlogPosts);
    }


}


